service: import-service
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  region: ${env:REGION}
  stage: dev

  environment:
    SQS_NEW_PRODUCT_URL:
      Ref: NewProductSQSQueue

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-shop-imported-files"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-shop-imported-files/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [ NewProductSQSQueue, Arn ]

resources:
  Resources:
    NewProductSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
  Outputs:
    NewProductSQSQueueArn:
      Value:
        Fn::GetAtt: [NewProductSQSQueue, Arn]

plugins:
  - serverless-plugin-webpack
  - serverless-dotenv-plugin

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          request:
            parameters:
              querystrings:
                name: true
          cors: true
          authorizer:
            name: basicAuthorizer
            arn: "arn:aws:lambda:${env:REGION}:${env:ACCOUNT_ID}:function:authorization-service-dev-basicAuthorizer"
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-shop-imported-files
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
